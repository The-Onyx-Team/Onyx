@page "/account/login"
@inject IUserManager UserManager
@inject NavigationManager NavigationManager

<h3>Login</h3>

<EditForm Model="m_RegisterModel" OnValidSubmit="Submit" FormName="LoginForm">
    <DataAnnotationsValidator/>
    @if (Error is not null)
    {
        <MudText Color="Color.Error">@Error</MudText>
    }
    <ValidationSummary/>
    <MudTextField Label="Email" @bind-Value="m_RegisterModel.Email" Required="true"/>
    <MudTextField Label="Password" @bind-Value="m_RegisterModel.Password" Required="true"
                  InputType="InputType.Password"/>
    <MudButton ButtonType="ButtonType.Submit">Login</MudButton>
</EditForm>

<ExternalLoginPicker />

<MudText>Go to <a href="/account/register">register</a> page</MudText>

@code {
    private readonly RegisterModel m_RegisterModel = new();
    [SupplyParameterFromQuery] private string? Error { get; set; }

    private async Task Submit()
    {
        var result = await UserManager.LoginAsync(m_RegisterModel.Email, m_RegisterModel.Password, "/");
        if (result.Success)
        {
            NavigationManager.NavigateTo("/", forceLoad: true);
        }
        else
        {
            Error = result.Message;
        }
    }

    public class RegisterModel
    {
        [EmailAddress]
        [Required]
        public string Email { get; set; } = "";
        
        [Required]
        public string Password { get; set; } = "";
    }

}