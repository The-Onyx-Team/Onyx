@page "/Account/Manage/ChangePassword"

<MudContainer Fluid="true" MaxWidth="MaxWidth.ExtraLarge" Class="mt-4" Style="overflow: hidden;">
    <MudText Typo="Typo.h3">Change Password</MudText>
    <br/>
    <MudCard Class="mt-4">
        <MudCardContent>
            <MudTextField T="string" 
                          Label="Current password" 
                          Variant="Variant.Text" 
                          InputType="@m_CurrentPasswordInput" 
                          Adornment="Adornment.End" 
                          AdornmentIcon="@m_CurrentPasswordIcon" 
                          OnAdornmentClick="ToggleCurrentPassword" 
                          AdornmentAriaLabel="Show Password" 
                          FullWidth="true" />
            
            <MudTextField T="string" 
                          Label="New password" 
                          Variant="Variant.Text" 
                          InputType="@m_NewPasswordInput" 
                          Adornment="Adornment.End" 
                          AdornmentIcon="@m_NewPasswordIcon" 
                          OnAdornmentClick="ToggleNewPassword" 
                          AdornmentAriaLabel="Show Password" 
                          FullWidth="true" />

            <MudTextField T="string" 
                          Label="Repeat new password" 
                          Variant="Variant.Text" 
                          InputType="@m_RepeatPasswordInput" 
                          Adornment="Adornment.End" 
                          AdornmentIcon="@m_RepeatPasswordIcon" 
                          OnAdornmentClick="ToggleRepeatPassword" 
                          AdornmentAriaLabel="Show Password" 
                          FullWidth="true" />
        </MudCardContent>
        
        <MudCardActions Class="justify-end">
            <MudButton Color="Color.Primary" Variant="Variant.Filled">Save changes</MudButton>
            <MudButton Variant="Variant.Text" Class="ml-2">Cancel</MudButton>
        </MudCardActions>
    </MudCard>
</MudContainer>

@code {
    bool m_CurrentIsShow;
    InputType m_CurrentPasswordInput = InputType.Password;
    string m_CurrentPasswordIcon = Icons.Material.Filled.VisibilityOff;

    bool m_NewIsShow;
    InputType m_NewPasswordInput = InputType.Password;
    string m_NewPasswordIcon = Icons.Material.Filled.VisibilityOff;

    bool m_RepeatIsShow;
    InputType m_RepeatPasswordInput = InputType.Password;
    string m_RepeatPasswordIcon = Icons.Material.Filled.VisibilityOff;

    void ToggleCurrentPassword()
    {
        m_CurrentIsShow = !m_CurrentIsShow;
        if (m_CurrentIsShow)
        {
            m_CurrentPasswordInput = InputType.Text;
            m_CurrentPasswordIcon = Icons.Material.Filled.Visibility;
        }
        else
        {
            m_CurrentPasswordInput = InputType.Password;
            m_CurrentPasswordIcon = Icons.Material.Filled.VisibilityOff;
        }
    }

    void ToggleNewPassword()
    {
        m_NewIsShow = !m_NewIsShow;
        if (m_NewIsShow)
        {
            m_NewPasswordInput = InputType.Text;
            m_NewPasswordIcon = Icons.Material.Filled.Visibility;
        }
        else
        {
            m_NewPasswordInput = InputType.Password;
            m_NewPasswordIcon = Icons.Material.Filled.VisibilityOff;
        }
    }

    void ToggleRepeatPassword()
    {
        m_RepeatIsShow = !m_RepeatIsShow;
        if (m_RepeatIsShow)
        {
            m_RepeatPasswordInput = InputType.Text;
            m_RepeatPasswordIcon = Icons.Material.Filled.Visibility;
        }
        else
        {
            m_RepeatPasswordInput = InputType.Password;
            m_RepeatPasswordIcon = Icons.Material.Filled.VisibilityOff;
        }
    }
}
