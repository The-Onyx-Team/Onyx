@page "/account/register"
@inject IUserManager UserManager

<h3>Register</h3>

<EditForm Model="m_RegisterModel" OnValidSubmit="Submit">
    <DataAnnotationsValidator/>
    <ValidationSummary/>
    <MudTextField Label="Username" @bind-Value="m_RegisterModel.Username" Required="true"/>
    <MudTextField Label="Email" @bind-Value="m_RegisterModel.Email" Required="true"/>
    <MudTextField Label="Password" @bind-Value="m_RegisterModel.Password" Required="true"
                  InputType="InputType.Password"/>
    <MudTextField Label="Confirm Password" @bind-Value="m_RegisterModel.ConfirmPassword" Required="true"
                  InputType="InputType.Password"/>
    <MudButton ButtonType="ButtonType.Submit">Register</MudButton>
</EditForm>

<ExternalLoginPicker />

@code {
    private readonly RegisterModel m_RegisterModel = new();

    private async Task Submit()
    {
        var result = await UserManager.RegisterAsync(m_RegisterModel.Username, 
            m_RegisterModel.Email, m_RegisterModel.Password, "/");
        if (result.Success)
        {
            // Redirect
        }
        else
        {
            // TODO
            Console.WriteLine("Error: " + result.Message);
        }
    }

    public class RegisterModel
    {
        [Required]
        public string Username { get; set; } = "";
        
        [EmailAddress]
        [Required]
        public string Email { get; set; } = "";
        
        [Required]
        public string Password { get; set; } = "";
        
        [Required]
        [Compare(nameof(Password))]
        public string ConfirmPassword { get; set; } = "";
    }

}