@page "/home"
@using Onyx.App.Shared.Services.Usage

@inject IStatsHelper StatsHelper

@layout AppLayout


<PageTitle>Home</PageTitle>

<MudGrid Justify="Justify.SpaceEvenly">
    <MudItem lg="5" md="10" sm="10" xs="10">
        <MudPaper Elevation="1" Square="false">
            <MudChart ChartType="ChartType.Line" InputData="@ComparisonChart" />
        </MudPaper>
    </MudItem>
    <MudItem lg="5" md="10" sm="10" xs="10">
        <MudPaper Elevation="1" Square="false">
            <MudList>
                @foreach (var item in TopCategoriesChart)
                {
                    <MudListItem Icon="@Icons.Material.Filled.Category">
                        @item
                    </MudListItem>
                }
            </MudList>
        </MudPaper>
    </MudItem>
    <MudItem lg="5" md="10" sm="10" xs="10">
        <MudPaper Elevation="1" Square="false">
            <MudChart ChartType="ChartType.Pie" InputData="@TodayChart" />
        </MudPaper>
    </MudItem>
    <MudItem lg="5" md="10" sm="10" xs="10">
        <MudPaper Elevation="1" Square="false">
            <MudChart ChartType="ChartType.StackedBar" InputData="@WeeklyChart" />
        </MudPaper>
    </MudItem>
</MudGrid>

@code
{

    public List<string>? TopCategoriesChart { get; set; }
    
    public List<ChartSeries>? ComparisonChart { get; set; }
    
    public double[]? TodayChart { get; set; }
    
    public double[]? WeeklyChart { get; set; }
    
    protected override void OnInitialized()
    {
        long endTime = DateTimeOffset.UtcNow.ToUnixTimeMilliseconds();
        long startTime = endTime - (30L * 24 * 60 * 60 * 1000);
        
        TopCategoriesChart = StatsHelper
            .GetUsageStatsTimeIntervalMilliseconds(startTime, endTime)
            .OrderByDescending(x => x.TimeInForeground)
            .GroupBy(x => x.Category)
            .Select(x => x.Key)
            .ToList();

        
    }
}
